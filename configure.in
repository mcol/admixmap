AC_INIT(hapmixmap, 0.3)
AC_CANONICAL_SYSTEM
AM_INIT_AUTOMAKE(hapmixmap,0.3)
AM_CONFIG_HEADER(config.h)

AC_LANG(C++)
AC_DISABLE_SHARED
AC_PROG_CXX
AC_PROG_LIBTOOL
AC_PROG_INSTALL
AC_PROG_MAKE_SET

AC_HEADER_STDC

AC_LANG_CPLUSPLUS

AC_CHECK_LIB(stdc++, main,,AC_MSG_ERROR(hapmixmap requires libstdc++))
dnl This doesn' work with some versions of autotools.
dnl AM_PATH_GSL
dnl FIXME: Add a different GSL check
AC_CHECK_HEADERS(stack,,AC_MSG_WARN(STL classes missing ?))
AC_CHECK_HEADERS(string,,AC_MSG_WARN(STL classes missing ?))
AC_CHECK_HEADERS(list,,AC_MSG_WARN(STL classes missing ?))
AC_CHECK_HEADERS(vector,,AC_MSG_WARN(STL classes missing ?))

AC_ARG_ENABLE(static-binary,[  --enable-static-binary  Build a static binary],
	      AC_MSG_WARN(Static binary will be built.),)
AC_ARG_ENABLE(parallel,[  --enable-parallel       Build the parallel version, using MPI],
	      AC_DEFINE([PARALLEL], [], [Parallel version]),AC_MSG_WARN(Serial version will be built.))

if test "$enable_parallel" = "yes"; then
	AC_CHECK_HEADERS(mpi++.h,,AC_MSG_ERROR(MPI headers are missing))
	PARALLEL_LIBS="-lmpich -lgmp -lsprng -lmpe"
	dnl AC_CHECK_LIB(mpic, main,,AC_MSG_ERROR(hapmixmap requires libstdc++)) 
else
	enable_parallel="no"
	PARALLEL_LIBS=""
fi

AC_SUBST([PARALLEL_LIBS])

if test "$enable_static_binary" = "yes"; then
	STATIC_LDFLAGS="-all-static"
else
	STATIC_LDFLAGS=""
	enable_static_binary="no"
fi

AC_SUBST([STATIC_LDFLAGS])

if test "$enable_parallel" = "yes" -a "$enable_static_binary" = "yes"; then
	AC_MSG_ERROR(Can't build a static parallel version.)
fi

dnl AC_CONFIG_SUBDIRS(src/bayeslib)
AC_OUTPUT([Makefile
	   src/Makefile
	   src/common/Makefile
	   src/admixmap/Makefile
	   src/hapmixmap/Makefile
	   src/tools/Makefile
	   src/bayeslib/Makefile
	   src/bayeslib/regression/Makefile
	   src/bayeslib/samplers/Makefile
	   src/bayeslib/utils/Makefile])

echo \
"------------------------------------------------------------------------
Configuration:

  Source code location:       ${srcdir}
  Compiler:                   ${CC}
  Compiler flags:             ${CFLAGS}
  Host System Type:           ${host}
  Install path:               ${prefix}
  Parallel version:           ${enable_parallel}
  Static binary:              ${enable_static_binary}

  See config.h for further configuration information.
------------------------------------------------------------------------"
